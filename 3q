import pandas as pd
import json
import argparse
from datetime import datetime, timedelta

def process_sales_data(csv_file_path):
    # อ่านไฟล์ CSV
    df = pd.read_csv(csv_file_path, parse_dates=['วันที่เปิดบิล'])

    # แปลงคอลัมน์ 'เวลาสั่ง' เป็น datetime
    df['เวลาสั่ง'] = pd.to_datetime(df['วันที่เปิดบิล'].dt.date.astype(str) + ' ' + df['เวลาสั่ง'])

    # สร้างคอลัมน์วันในสัปดาห์
    df['วันในสัปดาห์'] = df['วันที่เปิดบิล'].dt.day_name()

    # สร้างช่วงเวลาทุก 30 นาที
    time_intervals = pd.date_range("00:00", "23:59", freq="30T").time

    # สร้าง DataFrame ว่างสำหรับเก็บผลลัพธ์
    result = pd.DataFrame(columns=['time'] + list(df['วันในสัปดาห์'].unique()))

    # วนลูปผ่านแต่ละช่วงเวลา
    for interval in time_intervals:
        interval_end = (datetime.combine(datetime.today(), interval) + timedelta(minutes=30)).time()
        row = {'time': interval.strftime('%H:%M')}
        
        # คำนวณยอดขายสำหรับแต่ละวันในสัปดาห์
        for day in df['วันในสัปดาห์'].unique():
            sales = df[
                (df['วันในสัปดาห์'] == day) & 
                (df['เวลาสั่ง'].dt.time >= interval) & 
                (df['เวลาสั่ง'].dt.time < interval_end)
            ]['ราคารวม'].sum()
            row[day] = sales
        
        result = result.append(row, ignore_index=True)

    return result.to_dict('records')

def main():
    parser = argparse.ArgumentParser(description='Process sales data from CSV and save as JSON.')
    parser.add_argument('input', help='Path to the input CSV file')
    parser.add_argument('output', help='Path to save the output JSON file')
    args = parser.parse_args()

    try:
        processed_data = process_sales_data(args.input)
        with open(args.output, 'w', encoding='utf-8') as f:
            json.dump(processed_data, f, ensure_ascii=False, indent=2)
        print(f"Data processed successfully. Output saved to {args.output}")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    main()
